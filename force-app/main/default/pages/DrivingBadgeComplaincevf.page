<apex:page standardController="Compliance__c" extensions="DrivingBadgeComplaince">
       <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"/>
    <apex:slds />
    <style>
        .c{
        transform: rotate(1deg) !important;
        
        }
        .slds-scope .slds-button__icon {
        width: .875rem;
        height: .875rem;
        
        fill: red;
        transform: rotate(1deg) !important;
        }
        .slds-scope .slds-pill__remove {
        width: 2rem;
        height: 1rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-left: .25rem;
        border-radius: .125rem;
        }
    </style>
      <script type="text/javascript">
    var maxStringSize = 6000000;    //Maximum String size is 6,000,000 characters
    var maxFileSize = 4350000;      //After Base64 Encoding, this is the max file size
    var chunkSize = 950000;         //Maximum Javascript Remoting message size is 1,000,000 characters
    var attachment;
    var filetName;
    var fileSize;
    var positionIndex;
    var doneUploading;
    
    //Method to prepare a file to be attached to the Account bound to the page by the standardController
    function uploadFile() {
      
        var file = document.getElementById('attachtFile').files[0];
        console.log(file);
        if(file != undefined) {
            if(file.size <= maxFileSize) {
                filetName = file.name;
                var fileReader = new FileReader();
                fileReader.onloadend = function(e) {
                    attachment = window.btoa(this.result);  //Base 64 encode the file before sending it
                    positionIndex=0;
                    fileSize = attachment.length;
                    console.log("Total Attachment Length: " + fileSize);
                    doneUploading = false;
                    if(fileSize < maxStringSize) {
                        uploadAttachment(null);
                    } else {
                        alert("Base 64 Encoded file is too large.  Maximum size is " + maxStringSize + " your file is " + fileSize + ".");
                    }
                    
                }
                fileReader.onerror = function(e) {
                    alert("There was an error reading the file.  Please try again.");
                }
                fileReader.onabort = function(e) {
                    alert("There was an error reading the file.  Please try again.");
                }
                
                fileReader.readAsBinaryString(file);  //Read the body of the file
                
            } else {
                alert("File must be under 4.3 MB in size.  Your file is too large.  Please try again.");
            }
        } else {
            alert("You must choose a file before trying to upload it");
        }
    }
    
    
    function uploadAttachment(fileId) {
        // alert("File start Uploading");
        var base64Data = "";
        if(fileSize <= positionIndex + chunkSize) {
            base64Data = attachment.substring(positionIndex);
            doneUploading = true;
        } else {
            base64Data = attachment.substring(positionIndex, positionIndex + chunkSize);
        }
        console.log("Uploading " + base64Data.length + " chars of " + fileSize);
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.DrivingBadgeComplaince.uploadfiles}',
            '{!Compliance__c.Id}', base64Data,filetName ,
            function(result, event) {
                console.log(result);
                if(event.type === 'exception') {
                    console.log("exception");
                    console.log(event);
                } else if(event.status) {
                    alert("File uploaded successfully")
                    location.reload();
                    if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
							   window.location.reload();
                        } else {
                            positionIndex += chunkSize;
                            uploadAttachment(result);
                        }
                    }
                } else {
                    console.log(event.message);
                }
            },
            {buffer: true, escape: true, timeout: 120000}
        );
    }
   function updatefilename(cententversionid){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.DrivingBadgeComplaince.uploadfiles}',
            '{!Compliance__c.Id}',cententversionid  ,
            function(result, event) {
                console.log(result);
                if(event.type === 'exception') {
                    console.log("exception");
                    //console.log(event);
                } else if(event.status) {
                    alert("File uploaded successfully")
                    location.reload();
                    /* if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
							   window.location.reload();
                        } else {
                            //positionIndex += chunkSize;
                            //uploadAttachment(result);
                        }
                    }*/
                } else {
                    console.log(event.message);
                }
            },
            {buffer: true, escape: true, timeout: 120000}
        );
       }
    </script>
     <script type='text/javascript'>
            var fileLenght=0; 
            var FileUploading = 0;           
            var FileUploaded = 0;           
            var ids = new Array();
            function uploaddocuments(){
                debugger;
                $('[id*=spinner1]').show();
                var v=document.getElementById('attachtFile');               
                console.log(v.files.length);              
                fileLenght = v.files.length; 
                //   alert(v.files.[0].name);
                for (var i = 0; i < v.files.length; i++) {             
                    uploadSelectedFile(v.files[i], function(err, res){          
                        FileUploading += 1;                  
                        if (FileUploading === FileUploaded){ 
                            //alert('upload completed');     
                            //blank input file value                   
                            document.getElementById('attachtFile').value = "";          
                        }                
                    })               
                } 
            }
            var uploadSelectedFile = function(file, callback) {  
                //alert(where);
                filetoBase64(file, function(err, content){  
                    // alert('Content');
                    var conVer_object = {                  
                                             
                        VersionData : content,                     
                        PathOnClient : file.name,                     
                        Title : file.name ,
                        FirstPublishLocationId  : '{!serviceProviderId}',
                    };                  
                    $.ajax({ 
                        
                        url: '{!$Label.Community_user_file_upload_redirect_url}',                    
                        data: JSON.stringify(conVer_object ),                
                        type: 'POST',                 
                        processData: false,                    
                        contentType: false,                    
                        headers: {'Authorization': 'Bearer {!$Api.Session_ID}', 'Content-Type': 'application/json'},                
                        xhr: function(){                   
                            var xhr = new window.XMLHttpRequest();                       //Upload progress                      
                            xhr.upload.addEventListener("progress", function(evt){                     
                                if (evt.lengthComputable) {  
                                    $('[id*=spinner1]').hide();
                                    $('#progress_bar_container').css('display', 'block');                    
                                    var percentComplete = evt.loaded / evt.total;                      
                                    console.log('percentComplete '+percentComplete );                     
                                    var percentCompletex= percentComplete*100;                          
                                    $('#percentText').html("Uploading. Please wait... "+Math.round(percentCompletex)+"%");      
                                    $('.progress').css('width', percentCompletex+ "%");                         
                                    if(percentCompletex == 100){                           
                                        $('#progress_bar_container').css('display', 'none');                       
                                    }                      }                     }, false);                     
                            return xhr;                    },                  
                        success: function(response) { 
                            // alert('Success');
                            FileUploaded += 1;                     
                            console.log(response.id); 
                             updatefilename(response.id)
                            // the id of the attachment                     
                            ids.push(response.id);                      
                            console.log('Ids: ' +ids);                      
                            $('#records').html('File has been uploeded. Uploaded File ids: ' +ids);                      
                            if(fileLenght == FileUploaded ){                      
                                //calculateLocation(ids.toString());        
                            }                   
                            callback(null, true)                  
                        },
                        error : function(response) {
                           
                            // alert("Failed" + '{!$Label.Error_found_please_contact_system_admin}');
                            //alert('log::'+JSON.stringify(response));
                            console.log('response:'+response.message)
                        },
                    });                
                });              
            }  
            var filetoBase64 = function(file, callback){ 
                //debugger;
                var reader = new FileReader();                 
                reader.onload = function() {                 
                    var myFileContents = reader.result;                  
                    var base64Mark = 'base64,';                  
                    var dataStart = myFileContents.indexOf(base64Mark) + base64Mark.length;       
                    myFileContents = myFileContents.substring(dataStart);               
                    callback(null, myFileContents);  
                    //alert('alert');
                }              
                reader.readAsDataURL(file);              
            }
            </script>
      <script type='text/javascript'>
       function showfilename(input)  {
        
             var v=document.getElementById('attachtFile'); 
           //uploaddocuments();
         alert(v.files[0].name);  
      
        }
    
    </script>
    
    
    <apex:form >
        
        <apex:actionFunction name="deletedriverProofFile" action="{!deleteRecord}" id="deletedriverProofFile"  >
            

        </apex:actionFunction>
        
        <table width="100%">
            <tr><td >Driving Badge

               </td>
                <apex:outputPanel rendered="{!drivingLicence}">
                    <td >
                           
                        <div class="slds-form-element">
                            <div class="slds-form-element__control">
                                <div class="slds-file-selector slds-file-selector_files">
                                    <div class="slds-file-selector__dropzone">
                                        <input type="file" class="slds-file-selector__input slds-assistive-text" accept=".jpg,jepg,.png,.pdf" id="attachtFile" aria-labelledby="file-selector-primary-label file-selector-secondary-label" onchange="showfilename(this)" />
                                        <label class="slds-file-selector__body" for="attachtFile" id="file-selector-secondary-label">
                                            <span class="slds-file-selector__button slds-button slds-button_neutral">
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#upload')}"></use>
                                                </svg>Upload Files</span>
                                            <span class="slds-file-selector__text slds-medium-show">or Drop Files</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        
                        
                    </td>
                    <td>
                        <div class="slds-form-element">
                            
                            <button class="slds-button slds-button_brand"  onclick="uploaddocuments();return false;">Save</button></div>
                        
                    </td>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!!drivingLicence}">
                    
                    <td>
                        
                        <apex:outputLink value="{!myCustomObject.Driving_Badge_Picture__c}"  id="theLink1">  {!driverProofNm}</apex:outputLink>
                        
                    </td>
                    <td>
                        <button class="slds-button slds-button_icon_large slds-button_icon slds-pill__remove" title="Remove" onclick="deletedriverProofFile();return false;">
                            
                            <svg class="slds-section__title-action-icon slds-button__icon slds-button__icon_left" aria-hidden="true" >
                                <use  xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#delete')}"></use>
                            </svg>
                        </button>  
                    </td>
                </apex:outputPanel>                
            </tr>                       
        </table>        
    </apex:form>
</apex:page>