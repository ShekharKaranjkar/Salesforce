<apex:page standardController="Service_Provider__c" extensions="ProfilePictureController" >
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
        
        
        <META HTTP-EQUIV="Content-type" CONTENT="text/html; charset=UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"/>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
        <script src="https://www.google.com/recaptcha/api.js"></script>
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"/>
        <apex:includeScript value="https://code.jquery.com/jquery-1.11.3.js"/>
        <script src="https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js"></script>
        <script src="js/WebAudioRecorder.min.js"></script>
        <script src="js/app.js"></script>
        <script src="../../soap/ajax/47.0/connection.js"
        type="text/javascript"></script>
        <apex:includeScript value="{!$Resource.jquerymin}"/>
        <apex:slds />
        <style>
            .c{
            transform: rotate(1deg) !important;
            
            }
            .slds-scope .slds-button__icon {
            width: .875rem;
            height: .875rem;
            
            fill: red;
            transform: rotate(1deg) !important;
            }
            .slds-scope .slds-pill__remove {
            width: 2rem;
            height: 1rem;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-left: .25rem;
            border-radius: .125rem;
            }
            .slds-scope .slds-form-element__control {
            clear: left;
            position: relative;
            margin-left: 43px;
            }
            .slds-scope .slds-file-selector__dropzone {
            padding: .125rem;
            border: 1px dashed rgb(221, 219, 218);
            border-radius: .25rem;
            margin-left: 5px;
            }
        </style>
        
        <script type="text/javascript">
        var maxStringSize = 6000000;    //Maximum String size is 6,000,000 characters
        var maxFileSize = 4350000;      //After Base64 Encoding, this is the max file size
        var chunkSize = 950000;         //Maximum Javascript Remoting message size is 1,000,000 characters
        var attachment;
        var filetName;
        var fileSize;
        var positionIndex;
        var doneUploading;
        
        //Method to prepare a file to be attached to the Account bound to the page by the standardController
        function uploadFile() {
            
            var file = document.getElementById('attachtFile').files[0];
            console.log(file);
            if(file != undefined) {
                if(file.size <= maxFileSize) {
                   
                    filetName = file.name;
                    var fileReader = new FileReader();
                    fileReader.onloadend = function(e) {
                        attachment = window.btoa(this.result);  //Base 64 encode the file before sending it
                        positionIndex=0;
                        fileSize = attachment.length;
                        console.log("Total Attachment Length: " + fileSize);
                        doneUploading = false;
                        if(fileSize < maxStringSize) {
                            uploadAttachment(null);
                        } else {
                            alert("Base 64 Encoded file is too large.  Maximum size is " + maxStringSize + " your file is " + fileSize + ".");
                        }
                        
                    }
                    fileReader.onerror = function(e) {
                        alert("There was an error reading the file.  Please try again.");
                    }
                    fileReader.onabort = function(e) {
                        alert("There was an error reading the file.  Please try again.");
                    }
                    
                    fileReader.readAsBinaryString(file);  //Read the body of the file
                    
                } else {
                    alert("File must be under 4.3 MB in size.  Your file is too large.  Please try again.");
                }
            } else {
                alert("You must choose a file before trying to upload it");
            }
        }
        
        
        function uploadAttachment(fileId) {
            //alert('inside method');
            debugger;
            // alert("File start Uploading");
            var base64Data = "";
            if(fileSize <= positionIndex + chunkSize) {
                base64Data = attachment.substring(positionIndex);
                doneUploading = true;
            } else {
                base64Data = attachment.substring(positionIndex, positionIndex + chunkSize);
            }
            console.log("Uploading " + base64Data.length + " chars of " + fileSize);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ProfilePictureController.uploadfiles}',
                '{!Service_Provider__c.Id}', base64Data,filetName ,
                function(result, event) {
                    alert('loading');
                    console.log(result);
                    if(event.type === 'exception') {
                        console.log("exception");
                        console.log(event);
                    } else if(event.status) {
                        alert('hi');
                        alert('hi'+result);
                        if(result == 'err' ){
                            console.log('err'+err)
                            alert('cant upload file');
                            
                        }
                        else{
                            alert("File uploaded successfully")
                            location.reload();
                            if(result.substring(0,3) == '00P') {
                                if(doneUploading == true) {
                                    window.location.reload();
                                } else {
                                    positionIndex += chunkSize;
                                    uploadAttachment(result);
                                }
                            }
                        }
                    }
                    
                        else {
                            console.log(event.message);
                        }
                },
                {buffer: true, escape: true, timeout: 120000}
            );
        }
        function updatefilename(cententversionid){
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ProfilePictureController.uploadfiles}',
                '{!Service_Provider__c.Id}',cententversionid  ,
                function(result, event) {
                    console.log(result);
                    if(event.type === 'exception') {
                        console.log("exception");
                        //console.log(event);
                    } else if(event.status) {
                        
                        alert("File uploaded successfully")
                        location.reload();
                        /* if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
							   window.location.reload();
                        } else {
                            //positionIndex += chunkSize;
                            //uploadAttachment(result);
                        }
                    }*/
                    } else {
                        console.log(event.message);
                    }
                },
                {buffer: true, escape: true, timeout: 120000}
            );
        }
        </script>
        <script>
        function showtoast(toastid){
            $('[id$='+toastid+']').show();
        }
        </script>
        <script type='text/javascript'>
        var fileLenght=0; 
        var FileUploading = 0;           
        var FileUploaded = 0;           
        var ids = new Array();
        var myFuncCalls = 0;
        function uploaddocuments(){
            debugger;
            myFuncCalls++;
            //  alert( "I have been called " + myFuncCalls + " times" );
            $('[id*=spinner1]').show();
            var v=document.getElementById('attachtFile');               
            console.log(v.files.length);              
            fileLenght = v.files.length;
            
            if(fileLenght ==0) {
                alert('Please select Image');
                // showtoast('missingField_Toast');
            }
            if(myFuncCalls==1){
            for (var i = 0; i < v.files.length; i++) { 
                var file = v.files[i];
                if((file.name.includes('.png'))||(file.name.includes('.jpg'))||(file.name.includes('.jpeg'))){
                    uploadSelectedFile(v.files[i], function(err, res){          
                    FileUploading += 1;                  
                    if (FileUploading === FileUploaded){ 
                        //alert('upload completed');     
                        //blank input file value                   
                        document.getElementById('attachtFile').value = "";          
                    }                
                })   
                    } else 
                        {
                       alert ('This file is not supported, Please select the file of formate jpg, png and jpeg');
                             document.getElementById('attachtFile').value = ""; 
                  window.reload();
                            }
            }
                }
            else
                console.log('Metod Called 2 times console');
            // console.log(response.id); 
        }
        var uploadSelectedFile = function(file, callback) {  
            //alert(where);
            filetoBase64(file, function(err, content){  
                // alert('Content');
                var conVer_object = {                  
                    
                    VersionData : content,                     
                    PathOnClient : file.name,                     
                    Title : file.name ,
                    FirstPublishLocationId  : '{!serviceProviderId}',
                };                  
                $.ajax({ 
                    
                    url: '{!$Label.Community_user_file_upload_redirect_url}',                    
                    data: JSON.stringify(conVer_object ),                
                    type: 'POST',                 
                    processData: false,                    
                    contentType: false,                    
                    headers: {'Authorization': 'Bearer {!$Api.Session_ID}', 'Content-Type': 'application/json'},                
                    xhr: function(){                   
                        var xhr = new window.XMLHttpRequest();                       //Upload progress                      
                        xhr.upload.addEventListener("progress", function(evt){                     
                            if (evt.lengthComputable) {  
                                $('[id*=spinner1]').hide();
                                $('#progress_bar_container').css('display', 'block');                    
                                var percentComplete = evt.loaded / evt.total;                      
                                console.log('percentComplete '+percentComplete );                     
                                var percentCompletex= percentComplete*100;                          
                                $('#percentText').html("Uploading. Please wait... "+Math.round(percentCompletex)+"%");      
                                $('.progress').css('width', percentCompletex+ "%");                         
                                if(percentCompletex == 100){                           
                                    $('#progress_bar_container').css('display', 'none');                       
                                }                      }                     }, false);                     
                        return xhr;                    },                  
                    success: function(response) { 
                        // alert('Success');
                        FileUploaded += 1;                     
                            console.log(response.id); 
                             updatefilename(response.id)
                            // the id of the attachment                     
                            ids.push(response.id);                      
                            console.log('Ids: ' +ids);                      
                            $('#records').html('File has been uploeded. Uploaded File ids: ' +ids);                      
                            if(fileLenght == FileUploaded ){                      
                                //calculateLocation(ids.toString());        
                            }                   
                            callback(null, true)
                               document.getElementById('attachtFile').value = ""; 
                        
                    },
                    error : function(response) {
                        
                        // alert("Failed" + '{!$Label.Error_found_please_contact_system_admin}');
                        //alert('log::'+JSON.stringify(response));
                        console.log('response:'+response.message)
                    },
                });                
            });              
        }  
        var filetoBase64 = function(file, callback){ 
            //debugger;
            var reader = new FileReader();                 
            reader.onload = function() {                 
                var myFileContents = reader.result;                  
                var base64Mark = 'base64,';                  
                var dataStart = myFileContents.indexOf(base64Mark) + base64Mark.length;       
                myFileContents = myFileContents.substring(dataStart);               
                callback(null, myFileContents);  
                //alert('alert');
            }              
            reader.readAsDataURL(file);              
        }
        </script>
        <script type='text/javascript'>
        function showfilename(input)  {
            var v=document.getElementById('attachtFile'); 
            //uploaddocuments();
            //  alert(document.getElementById('attachtFile').files.length);
            var filelen =document.getElementById('attachtFile').files.length;
            if(filelen ==0){
                alert('Please Choose Alteast one file');
            }
            else{
                 for (var i = 0; i < v.files.length; i++) {             
               var file = v.files[i];
                if((file.name.includes('.png'))||(file.name.includes('.jpg'))||(file.name.includes('.jpeg'))){
                    } else 
                       alert ('This file is not supported, Please select the file of formate jpg, png and jpeg');              
            } 
                
                alert(v.files[0].name); 
                /* if(v.files[0].name.includes('.pdf')){
                    alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                    
                    document.getElementById("attachtFile").value = "";
                }
                else if(v.files[0].name.includes('.csv')){
                    alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                    
                    document.getElementById("attachtFile").value = "";
                }
                    else if(v.files[0].name.includes('.xlsx')){
                        alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                        
                        document.getElementById("attachtFile").value = "";
                    }
                        else if(v.files[0].name.includes('.webm')){
                            alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                            
                            document.getElementById("attachtFile").value = "";
                        }
                            else if(v.files[0].name.includes('.mp4')){
                                alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                                
                                document.getElementById("attachtFile").value = "";
                            }
                                else if(v.files[0].name.includes('.mp3')){
                                    alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                                    
                                    document.getElementById("attachtFile").value = "";
                                }
                
                                    else if(v.files[0].name.includes('.jar')){
                                        alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                                        
                                        document.getElementById("attachtFile").value = "";
                                    }
                
                                        else if(v.files[0].name.includes('.html')){
                                            alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                                            
                                            document.getElementById("attachtFile").value = "";
                                        }
                                            else if(v.files[0].name.includes('.zip')){
                                                alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                                                
                                                document.getElementById("attachtFile").value = "";
                                            }
                                                else if(v.files[0].name.includes('.exe')){
                                                    alert('This file is not supported, Please select the file of formate jpg, png and jpeg');
                                                    
                                                    document.getElementById("attachtFile").value = "";
                                                }
                */
                
                
                
                
            }  
        }
        
        </script>
        
        
        <apex:form >
            
            <div class="demo-only" style="height:4rem; display:none;" id="missingField_Toast">
                <div class="slds-notify_container slds-is-fixed">
                    <div class="slds-notify slds-notify_toast slds-theme_error" role="status">
                        <span class="slds-assistive-text">error</span>
                        <span class="slds-icon_container slds-icon-utility-error slds-m-right_small slds-no-flex slds-align-top" title="Description of icon when needed">
                            <svg class="slds-icon slds-icon_small" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#error')}"></use>
                            </svg>
                        </span>
                        <div class="slds-notify__content">
                            <h2 class="slds-text-heading_small ">Please Choose File</h2>
                        </div>
                        <div class="slds-notify__close">
                            <button class="slds-button slds-button_icon slds-button_icon-inverse" title="Close" onclick="hidetoast('missingField_Toast');return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <apex:actionFunction name="deletedriverProofFile" action="{!deleteRecord}" id="deletedriverProofFile"  >
                
                
            </apex:actionFunction>
            
            <table width="100%">
                <tr><td >Profile Picture
                    
                    </td>
                    <apex:outputPanel rendered="{!drivingLicence}">
                        <td >
                            
                            <div class="slds-form-element">
                                <div class="slds-form-element__control">
                                    <div class="slds-file-selector slds-file-selector_files">
                                        <div class="slds-file-selector__dropzone">
                                            <input type="file" class="slds-file-selector__input slds-assistive-text" accept=".jpg,jepg,.png" id="attachtFile" aria-labelledby="file-selector-primary-label file-selector-secondary-label" onchange="showfilename(this)" />
                                            <label class="slds-file-selector__body" for="attachtFile" id="file-selector-secondary-label">
                                                <span class="slds-file-selector__button slds-button slds-button_neutral">
                                                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#upload')}"></use>
                                                    </svg>Upload Files</span>
                                                <span class="slds-file-selector__text slds-medium-show">or Drop Files</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            
                            
                        </td>
                        <td>
                            <div class="slds-form-element">
                                
                                <button class="slds-button slds-button_brand"  onclick="uploaddocuments();return false;">Save</button></div>
                            
                        </td>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!!drivingLicence}">
                        
                        <td>
                            
                            <apex:outputLink value="/{!myCustomObject.Profile_Picture__c}"  id="theLink1">  {!driverProofNm}</apex:outputLink>
                            
                        </td>
                        <td>
                            <button class="slds-button slds-button_icon_large slds-button_icon slds-pill__remove" title="Remove" onclick="deletedriverProofFile();return false;">
                                
                                <svg class="slds-section__title-action-icon slds-button__icon slds-button__icon_left" aria-hidden="true" >
                                    <use  xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#delete')}"></use>
                                </svg>
                            </button>  
                        </td>
                    </apex:outputPanel>                
                </tr>                       
            </table>        
        </apex:form>
    </html>
</apex:page>