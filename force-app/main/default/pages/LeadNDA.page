<apex:page extensions="LeadFfileupload" standardController="Lead" lightningStylesheets="true">
    <apex:slds />
    <style>
        .c{
        transform: rotate(1deg) !important;
        
        }
        .slds-scope .slds-button__icon {
        width: .875rem;
        height: .875rem;
        fill: red;
        transform: rotate(1deg) !important;
        }
        .slds-scope .slds-pill__remove {
        width: 2rem;
        height: 1rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-left: .25rem;
        border-radius: .125rem;
        }
    </style>
    <script type="text/javascript">
    var maxStringSize = 6000000;    //Maximum String size is 6,000,000 characters
    var maxFileSize = 4350000;      //After Base64 Encoding, this is the max file size
    var chunkSize = 950000;         //Maximum Javascript Remoting message size is 1,000,000 characters
    var attachment;
    var filetName;
    var fileSize;
    var positionIndex;
    var doneUploading;
    
    //Method to prepare a file to be attached to the Account bound to the page by the standardController
    function uploadFile() {
        alert("File start Uploading");
        var file = document.getElementById('attachtFile').files[0];
        console.log(file);
        if(file != undefined) {
            if(file.size <= maxFileSize) {
                filetName = file.name;
                var fileReader = new FileReader();
                fileReader.onloadend = function(e) {
                    attachment = window.btoa(this.result);  //Base 64 encode the file before sending it
                    positionIndex=0;
                    fileSize = attachment.length;
                    console.log("Total Attachment Length: " + fileSize);
                    doneUploading = false;
                    if(fileSize < maxStringSize) {
                        uploadAttachment(null);
                    } else {
                        alert("Base 64 Encoded file is too large.  Maximum size is " + maxStringSize + " your file is " + fileSize + ".");
                    }
                    
                }
                fileReader.onerror = function(e) {
                    alert("There was an error reading the file.  Please try again.");
                }
                fileReader.onabort = function(e) {
                    alert("There was an error reading the file.  Please try again.");
                }
                
                fileReader.readAsBinaryString(file); 
                
            } else {
                alert("File must be under 4.3 MB in size.  Your file is too large.  Please try again.");
            }
        } else {
            alert("You must choose a file before trying to upload it");
        }
    }
    
    
    function uploadAttachment(fileId) {
        alert("While Uploading Don't Refresh the page")
        var base64Data = "";
        if(fileSize <= positionIndex + chunkSize) {
            base64Data = attachment.substring(positionIndex);
            doneUploading = true;
        } else {
            base64Data = attachment.substring(positionIndex, positionIndex + chunkSize);
        }
        console.log("Uploading " + base64Data.length + " chars of " + fileSize);
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.LeadFfileupload.uploadfiles}',
            '{!Lead.Id}', base64Data,filetName ,
            function(result, event) {
                console.log(result);
                if(event.type === 'exception') {
                    console.log("exception");
                    console.log(event);
                } else if(event.status) {
                    alert("File uploaded successfully")
                    location.reload();
                    if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
                            // alert("asdc")
                            //      window.open("/{!Lead.Id}", "_blank");
                            // window.location.reload();
                            // window.onload();
                            setTimeout(function() {
  location.reload();
}, 3000);
                        } else {
                            positionIndex += chunkSize;
                            uploadAttachment(result);
                        }
                    }
                } else {
                    console.log(event.message);
                }
            },
            {buffer: true, escape: true, timeout: 120000}
        );
    }
    </script>
    
    
    <apex:form >
        <div class="slds-scope">
            
            
            <!--    <apex:actionFunction name="uploadProofFile" action="{!upload}" id="uploadProofFile"  >
<apex:param name="uploadtype"  assignTo="{!uploadType}" value=""/>

</apex:actionFunction> -->
            
            <apex:actionFunction name="deleteProofFile" action="{!deleteRecord}" id="deleteProofFile"  >
                
                
            </apex:actionFunction>
            
            
            
            <table width="100%">
                <tr><td width="40%">NDA 
                    </td>
                    <apex:outputPanel rendered="{!addressproof}">
                        <td width="40%">
                            <!--     <div class="slds-form-element">
<div class="slds-form-element__control">
<div class="slds-file-selector slds-file-selector_files">
<div class="slds-file-selector__dropzone">

<apex:inputFile styleClass="slds-file-selector__input slds-assistive-text" accept=".jpg,jepg,.png,.pdf" id="fileUploadInput01" fileName="{!myDoc.Name}" 
value="{!myDoc.Body}" />  
<apex:outputLabel styleClass="slds-file-selector__body" for="fileUploadInput01">
<span class="slds-file-selector__button slds-button slds-button_neutral">
<svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#upload')}"></use>
</svg>Upload Files</span>
<span class="slds-file-selector__text slds-medium-show">or Drop Files</span>
</apex:outputLabel> 
</div>
</div>
</div>
</div>   -->
                            
                            
                            
                            <div class="slds-form-element">
                                <div class="slds-form-element__control">
                                    <div class="slds-file-selector slds-file-selector_files">
                                        <div class="slds-file-selector__dropzone">
                                            <input type="file" class="slds-file-selector__input slds-assistive-text" accept=".jpg,jepg,.png,.pdf" id="attachtFile" aria-labelledby="file-selector-primary-label file-selector-secondary-label" />
                                            <label class="slds-file-selector__body" for="attachtFile" id="file-selector-secondary-label">
                                                <span class="slds-file-selector__button slds-button slds-button_neutral">
                                                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#upload')}"></use>
                                                    </svg>Upload Files</span>
                                                <span class="slds-file-selector__text slds-medium-show">or Drop Files</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            
                            
                            
                            
                        </td>
                        <td width="20%">
                            <div class="slds-form-element">
                                
                                <button class="slds-button slds-button_brand"  onclick="uploadFile();return false;"  >Save</button></div>
                            
                        </td>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!!addressproof}" styleClass="myCSSClass">
                        <td>
                            <apex:outputLink value="https://lithium--uat--c.documentforce.com/sfc/servlet.shepherd/document/download/{!myCustomObject.NDA_Proof__c}" id="theLink"> &nbsp;&nbsp;&nbsp;&nbsp;   {!addressProofNm} </apex:outputLink>
                            
                        </td>
                        <td >
                            <div class="c">
                                <button class="slds-button slds-button_icon_large slds-button_icon  slds-icon_large slds-pill__remove" title="Remove" onclick="deleteProofFile();return false;">
                                    
                                    <svg class="slds-section__title-action-icon slds-button__icon  slds-icon_large slds-button__icon_left" aria-hidden="true" >
                                        <use  xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#delete')}"></use>
                                    </svg>
                                </button>                                                                                                                                                                                                                                                                        
                            </div>
                            
                        </td>
                        
                    </apex:outputPanel>
                </tr>
            </table>
            <!-- <img src="https://lithium--dev--c.documentforce.com/sfc/servlet.shepherd/document/download/0685D000000ccAMQAY"/> -->
            
        </div></apex:form>
    
</apex:page>